# This workflow is expected to be run by the git workflow of the remote
# chart whenever a new target is pushed:
# gh workflow run publish-charts.yml --repo mbaldessari/charts-test --ref main \
#   -f SOURCE_TAG="v0.0.1" -f SOURCE_REPO="mbaldessari/helm-chart-test"
name: vp-patterns/publish-charts
on:
  workflow_dispatch:
    inputs:
      SOURCE_TAG:
        required: true
        description: The tag of the helm chart repo to build
      SOURCE_REPO:
        required: true
        description: The helm chart repo
      TEMPLATE_DIR:
        required: false
        description: The path relative to the SOURCE_REPO where Chart.yaml and the templates directory is
        default: ""
      SOURCE_BRANCH_OVERRIDE:
        required: false
        description: If specified, checks out the head of this branch rather than the commit tagged by SOURCE_TAG
        default: ""

env:
  SOURCE_TAG: "${{ inputs.SOURCE_TAG }}"
  SOURCE_REPO: "${{ inputs.SOURCE_REPO }}"
  SOURCE_BRANCH_OVERRIDE: "${{ inputs.SOURCE_BRANCH_OVERRIDE }}"

jobs:
  update-charts:
    if: ${{ inputs.SOURCE_TAG }}
    runs-on: ubuntu-latest
    # FIXME(bandini): reduce these permissions a bit
    permissions: write-all
    steps:
      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.1

      - name: Setup yq
        run: |-
          sudo curl -L -o /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64

      - name: Clone remote helm repo
        env:
          SOURCE_BRANCH_OVERRIDE: ${{ inputs.SOURCE_BRANCH_OVERRIDE }}
        run: |-
          set -e
          if [ -n "${SOURCE_BRANCH_OVERRIDE}" ]; then
            git clone "https://github.com/${SOURCE_REPO}.git" \
              --branch "${SOURCE_BRANCH_OVERRIDE}" --single-branch helm-repo
          else
            git clone "https://github.com/${SOURCE_REPO}.git" \
              --branch "${SOURCE_TAG}" --single-branch helm-repo
          fi

      - name: Package the helm chart
        shell: bash
        run: |-
          set -euo pipefail
          helm package helm-repo/${{ inputs.TEMPLATE_DIR }}
          CHART_NAME=$(yq '.name' helm-repo/Chart.yaml)
          CHART_VERSION=$(yq '.version' helm-repo/Chart.yaml)
          CHART_TGZ="${CHART_NAME}-${CHART_VERSION}.tgz"
          echo "CHART_NAME=$(yq '.name' helm-repo/Chart.yaml)" >> $GITHUB_ENV
          echo "CHART_VERSION=$(yq '.version' helm-repo/Chart.yaml)" >> $GITHUB_ENV
          echo "CHART_TGZ=${CHART_TGZ}" >> $GITHUB_ENV

          # Some rudimentary parsing of the version. The chart *must* use the simple semantic versioning
          # so x.y.z only atm
          CHART_MAJ=$(yq '.version | (split(".") | .[0])' helm-repo/Chart.yaml)
          CHART_MIN=$(yq '.version | (split(".") | .[1])' helm-repo/Chart.yaml)
          CHART_PATCHLEVEL=$(yq '.version | (split(".") | .[2])' helm-repo/Chart.yaml)
          echo "CHART_MAJ=${CHART_MAJ}" >> $GITHUB_ENV
          echo "CHART_MIN=${CHART_MIN}" >> $GITHUB_ENV
          echo "CHART_PATCHLEVEL=${CHART_PATCHLEVEL}" >> $GITHUB_ENV

      - name: Upload helm package as a release asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ env.CHART_TGZ }}
          asset_name: ${{ env.CHART_TGZ }}
          tag: ${{ github.ref }}
          body: "${{ env.CHART_NAME }} Released ${{ env.CHART_VERSION }}"
          overwrite: true
          # Uploaded to https://github.com/mbaldessari/charts-test/releases/download/main/test-0.0.1.tgz

      - name: Update the helm index.yaml file
        run: |-
          set -e
          helm repo index --url https://mbaldessari.github.io/charts-test/releases/download/main/ --merge index.yaml .
          cat index.yaml
          echo "HELM_DIR=${PWD}" >> $GITHUB_ENV

      - name: Checkout code to git-repo folder
        uses: actions/checkout@v3
        with:
          # Full git history is needed to get a proper list of changed files within `super-linter`
          fetch-depth: 0
          path: git-repo

      - name: Commit to gh-pages
        run: |-
          set -e
          cp -v index.yaml git-repo/
          cd git-repo
          git config --global user.name "GH Pages index yaml"
          git config --global user.email "michele+gh@acksyn.org"
          git checkout gh-pages
          git add index.yaml
          git commit index.yaml -m "Updated ${{ env.CHART_NAME }}-${{ env.CHART_VERSION }}"
          git push origin gh-pages
